{"version":3,"file":"static/js/4.chunk.js","sources":["/Users/naruto/Desktop/mycode/study-notes/src/views/admin/user/index.jsx","/Users/naruto/Desktop/mycode/study-notes/src/views/admin/user/queryForm.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport { getCommentsCount } from '@/lib'\nimport moment from 'moment'\nimport QueryForm from './queryForm'\nimport { Table, Button, Modal, message, Badge } from 'antd'\n\nclass UserManage extends Component {\n  state = {\n    list: [],\n    pagination: {},\n    loading: false\n  }\n\n  componentDidMount() {\n    this.fetchList({ page: 1 })\n  }\n\n  getColumns = () => {\n    return [\n      {\n        title: '用户名',\n        dataIndex: 'username'\n      },\n      {\n        title: '评论数',\n        dataIndex: 'comments',\n        render: text => {\n          const count = getCommentsCount(text)\n          return count !== 0 ? <Badge count={count} style={{ backgroundColor: '#52c41a' }} /> : count\n        },\n        sorter: (a, b) => getCommentsCount(a.comments) - getCommentsCount(b.comments)\n      },\n      {\n        title: '注册时间',\n        dataIndex: 'createdAt',\n        sorter: (a, b) => (moment(a.createdAt).isBefore(b.createdAt) ? 1 : -1)\n      },\n      {\n        title: '操作',\n        render: (text, record) => (\n          <Button type=\"danger\" onClick={() => this.handleDelete(record.id, record.username)}>\n            删除\n          </Button>\n        )\n      }\n    ]\n  }\n\n  fetchList = ({ current = 1, pageSize = 10, ...query }) => {\n    this.setState({ loading: true })\n    this.axios.get('/user/getUserList', { params: { page: current, pageSize, ...query } }).then(res => {\n      const pagination = {\n        current,\n        pageSize,\n        total: res.count\n      }\n      this.setState({ list: res.rows, pagination, loading: false })\n    })\n  }\n\n  handleDelete = (userId, username) => {\n    Modal.confirm({\n      title: '您确认删除该用户?，此操作不可恢复！',\n      content: `用户： ${username} `,\n      onOk: () => {\n        this.axios.delete('/user/delete', { params: { userId } }).then(res => {\n          if (res.code === 200) {\n            this.fetchList(this.state.pagination)\n            message.success(res.message)\n          }\n        })\n      }\n    })\n  }\n\n  handleChange = pagination => {\n    this.fetchList({ ...pagination, ...this.state.query })\n  }\n\n  getQuery = query => {\n    this.setState({ query })\n    this.fetchList({ ...query, current: 1 })\n  }\n\n  render() {\n    const { list, pagination, loading } = this.state\n    return (\n      <div className=\"\">\n        <QueryForm getQuery={this.getQuery} />\n        <Table\n          rowKey=\"id\"\n          bordered\n          columns={this.getColumns()}\n          loading={loading}\n          dataSource={list}\n          pagination={pagination}\n          onChange={this.handleChange}\n        />\n      </div>\n    )\n  }\n}\n\nexport default UserManage\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Button, Form, Input, Select, DatePicker } from 'antd'\nimport FormBuilder from '@/components/helper/FormBuilder'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\n\nconst RangePicker = DatePicker.RangePicker\nconst Option = Select.Option\n\n@connect(state => state.article)\nclass QueryForm extends Component {\n  static propTypes = {\n    getQuery: PropTypes.func.isRequired\n  }\n\n  getFormMeta = () => {\n    return {\n      colon: true,\n      elements: [\n        {\n          key: 'username',\n          label: '姓名',\n          widget: <Input placeholder=\"请输入姓名\" />\n        }\n      ]\n    }\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    this.props.form.validateFieldsAndScroll((errors, values) => {\n      if (errors) return\n      console.log('submit form: ', values)\n      this.props.getQuery(values)\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"query-form\">\n        <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n          <FormBuilder meta={this.getFormMeta()} form={this.props.form}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              检索\n            </Button>\n          </FormBuilder>\n        </Form>\n      </div>\n    )\n  }\n}\n\nexport default Form.create()(QueryForm)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AASA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAPA;AAUA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AAtEA;AACA;AAAA;AAAA;AACA;;;AAqEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAWA;;;;AA9FA;AACA;AAgGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvGA;AAIA;AACA;AACA;AAEA;AACA;AAGA;AADA;AAAA;;;;;;;;;;;;;;;;;;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAHA;AAUA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAOA;;;;AAvCA;AA0CA;;;;A","sourceRoot":""}